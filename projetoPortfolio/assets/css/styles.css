@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz@0,14..32;1,14..32&display=swap');
@import url('https://fonts.googleapis.com/css2?family=League+Spartan:wght@100..900&display=swap');

:root,
:root[data-theme="dark"] {
    /*Estabelece a paleta de cores do tema "dark". Referenciado na tag html.*/
    --primary-color: #F0F0F0;

    --primary-bg-color: #111217;
    --secondary-bg-color: #28292E;
    --primary-border-color: #28292E;
    --secondary-border-color: #56575A;

    --title-color: #F0F0F0;
    --text-color: #9A9A9C;
    --link-color: #9A9A9C;
    --icon-color: #C7C8C9;
}

:root[data-theme="light"] {
    /*Estabelece a paleta de cores do tema "light". Referenciado na tag html.*/
    --primary-color: #0B0B0F;

    --primary-bg-color: #E9E9E9;
    --secondary-bg-color: #C7C8C9;
    --primary-border-color: #C7C8C9;
    --secondary-border-color: #C7C8C9;

    --title-color: #0B0B0F;
    --text-color: #28292E;
    --link-color: #28292E;
    --icon-color: #56575A;
}

/*
Inverte a cor da logo ao mudar para o modo "light"

html[data-them='light'] .brand__logo{
    filter: invert(1);

    O filter em CSS é uma propriedade que permite aplicar efeitos visuais diretamente aos elementos, como se fossem filtros de um editor de imagens. Funciona de forma não-destrutiva, ou seja, não altera o arquivo original, apenas como ele é exibido.

    Principais funções de filtro

    blur(px) - Desfoque
    brightness(%) - Brilho
    contrast(%) - Contraste
    saturate(%) - Saturação
    hue-rotate(deg) - Rotação de matiz
    grayscale(%) - Escala de cinza
    sepia(%) - Efeito sépia
    invert() - Inversão de cores
    drop-shadow() - Sombra
}
*/

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    /*estabelece o tamanho total da caixa considerando o conteúdo, o padding e a borda. Isso possibilita que alterações em algum desses elementos não altere o tamanho total da caixa*/
    vertical-align: baseline;
    /*o baseline é especialmente importante quando você tem elementos de diferentes tamanhos na mesma linha e quer que eles se alinhem de forma natural com o texto, mantendo a legibilidade*/
    list-style: none;
}

body {
    background-color: var(--primary-bg-color);
    font-family: 'Inter', Tahoma, Geneva, Verdana, sans-serif;
    /*Fonte importada do google fonts*/
}

a {
    text-decoration: none;
    color: var(--text-color);
}

a:hover {
    color: var(--primary-color);
    font-weight: 600;
}

i {
    color: var(--icon-color);
}

b {
    font-weight: 400;
}

h1 {
    font-size: 2.5rem;
    font-weight: 200;
}

h1,
h2,
h3 {
    font-family: 'League spartan', Tahoma, Geneva, Verdana, sans-serif;
    text-transform: uppercase;
    color: var(--title-color);
    font-weight: 200;
}

p {
    font-size: 1.25rem;
    text-align: justify;
}

.header {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: center;
    /*Alinhamento no eixo Y*/
    width: 100%;
    /*Uso de unidade relativa referente ao container no qual está inserido*/
    padding: .5rem 1rem;
    /*em cima e embaixo (.5rem) e direita e esq (1rem). "rem" unidade de medida relativa ao tamanho de fonte estabelecido no navegador*/
}

.header__toggle {
    display: flex;
    justify-content: flex-end;
}

.header__brand .brand__logo {
    width: 3.25rem;
    height: 3.25rem;
    /*largura e altura obtidas por meio do projeto no figma. Unidade de medida relativa (responsividade)*/
}

#toggleTheme {
    font-size: 1.5rem;
    /*ícone entendido como fonte. Contrla seu tamanho*/
    color: var(--primary-color);
    cursor: pointer;
    transition: ease-in-out 1s;
}

.menu {
    display: flex;
    align-items: center;
    background: var(--primary-bg-color);
}

.menu__item {
    width: 100%;
}

.menu--mobile {
    width: 100vw;
    /*Unidade de medida relativa. Garante cobrir a largura de toda a extensão da sua viewport, pois, diferentemente da porcentagem (que é relativa ao container no qual o elemento está inserido), a "vw" é referente ao tamanho de tela do navegador do usuário */
    position: fixed;
    /*estabelece, juntamente com a propriedade bottom, que esse elemento, o menu na versão mobile, ficará fixo no fundo da tela, independente do usuário subir e descer a tela*/
    bottom: 0;
    /*faz com que o menu fique no final da tela*/
    justify-content: space-between;
    border-top: 1px solid var(--border-color);
}

.menu--mobile .menu__link {
    /*indica que o elemento com class=menu__link é filho do elemento com class=menu--mobile*/
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: .5rem 1rem;
    gap: .5rem;
}

.menu__link.active .menu__icon,
.menu__link.active .menu__text,
.menu__link:hover .menu__icon,
.menu__link:hover .menu__text {
    color: var(--primary-color);
    font-weight: 600;
    /*Estabelece o comportamento das âncoras quando o cursor está em cima e quando são selecionadas. Comportamento presente tanto na versão mobile quanto na principal*/
}

.menu__icon,
.menu__text {
    color: var(--text-color);
}

.menu__icon {
    font-size: 1.5rem;
}

.menu__text {
    font-size: .75rem;
    text-transform: uppercase;
}

.header__nav {
    display: none;
}

.menu--principal {
    gap: 1rem;
}

.menu--social {
    gap: 1rem;
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: .625rem;
    width: 100%;
    background: transparent;
    border-radius: 3.125rem;
    padding: .875tem 1.5rem;
    transition: ease-in-out .3s;
    cursor: pointer;
}

.btn:hover {
    transform: scale(1.05);
    transition: ease-in-out .3s;
}

.btn span,
.btn i {
    font-size: 1.25rem;
    text-transform: uppercase;
}

.btn--primary {
    border: 1px solid var(--primary-color);
}

.btn--primary span {
    color: var(--primary-color);
}

main {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 2.5rem 1rem;
}

.main__content1 {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.main__content2 iframe {
    width: 100%;
    aspect-ratio: 16/9;
    /*Define a proporção entre largura e altura de um elemento.*/
}

.skills {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    gap: 1.25rem;
    padding: 6.25rem 1rem 2rem 1rem;
    background: var(--secondary-bg-color);
    margin-top: -5.5rem;
}

.skills h2 {
    font-size: 2rem;
    text-transform: none;
}

.skills__list {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    gap: .5rem;
}

.skills__item {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 4.8rem;
    height: 4.8rem;
    aspect-ratio: 1/1;
    border: 1px solid var(--secondary-border-color);
    border-radius: 50rem;
}

.skills__logo {
    height: 2.4rem;
}

footer {
    margin-bottom: 5rem;
}

footer p {
    font-size: .875rem;
    text-align: center;
    padding: 1rem;
}

/* Media queries */
@media (min-width: 768px) {

    .header {
        position: fixed;
        border-bottom: 1px solid var(--border-color);
        padding: 1rem 4rem;
        background: var(--primary-bg-color);
    }

    /*Ajuste para tela de desktop utilizando o breakpoint de 768px. Isso significa que telas maiores que isso (ou minimamente com esse tamanho) executem os comando nesse escopo*/
    .nav--mobile {
        display: none;
        /*estabelece que, quando a tela do usuário tiver no mínimo 768px (tamanho convencional de uma tela de desktop, o display será "none", ou seja, esse elemento não será mostrado*/
    }

    .header__nav {
        display: flex;
        /*Estabelece nesse tamanho de tela que o menu--principal deixa de ter a configuração "none" e passa a ser "flex" (passa a aparecer e a se comportar como flex)*/
    }

    .header__nav,
    .header__toggle {
        min-width: 30%;
        /*Estabelece a menor largura possível que um elemento pode ter. É um limite inferior, ou seja, o elemento nunca fica menor que esse valor (mas pode ficar maior, se necessário.*/
    }

    h1 {
        font-size: 4rem;
    }

    main {
        padding: 8rem 6rem 4rem 6rem;
    }

    .main__content1 {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 5rem;
    }

    .skills {
        padding: 6.25rem 6rem 2rem 6rem;
        margin-top: -6rem;
    }

    footer {
        margin: 0;
    }
}

@media(min-width: 1200px) {
    main {
        padding: 12rem 6rem 2rem;
    }

    .main__content1 .btn {
        width: auto;
    }

    .skills {
        flex-direction: row;
        justify-content: space-between;
        padding: 10rem 6rem 4rem 6rem;
    }

    .skills h2 {
        font-size: 3.5rem;
        width: 60%;
    }

    .skills__list{
        gap: 1rem;
    }

    .skills__item {
        width: 6rem;
        height: 6rem;
    }

    .skills__logo {
        height: 3rem;
    }
}

@media(min-width: 1400px) {
    h1 {
        font-size: 6.25rem;
    }

    p{
        font-size: 1.5rem;
    }

    .header {
        padding: 1rem 15rem;
    }

    main {
        padding: 12rem 15rem 2rem;
    }

    .skills {
      padding: 10rem 15rem 4rem 15rem;
    }
}